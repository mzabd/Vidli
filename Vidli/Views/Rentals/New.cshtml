
@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>
<form id ="newRental">
    <div  class="form-group">
            <label>Customer</label>
        @*adding another div as the text boxes are wraped wiht another div by typeahead as poition relative 
            for better visual alignment of both textbox and add style for this class at typeahead.css*@
        <div class="tt-container"> 
            <input type="text" id="customer"  name="customer"  data-rule-validCustomer="true" required value="" class="form-control" />
        </div>
    </div>
    <div class="form-group">    
            <label>Movie</label>
        <div class="tt-container">
            <input type="text" id="movie" name="movie"  data-rule-validMovie="true"  value="" class="form-control" />
        </div>
    </div>
    @*ul to contain movie selection. also used bootstrap grid system for better look n feel*@
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
    

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            //declare veiwmodel object for client!!
            var vm = {
                MovieIds:[] // to hold the movie id list
            };
            //copied code from https://twitter.github.io/typeahead.js/examples/#remote
            //-------------------------------------------------------------------------
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
                }).on("typeahead:select", function(e, customer) {
                    vm.CustomerId = customer.id;
                });

            //for movie
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
                }).on("typeahead:select", function (e, movie) {
                    //for list of movies
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                    //we need to set the value of movie to textbox after the selection but not with .val() with typeahead syntax
                    $("#movie").typeahead("val", "");
                    //psuh the id to movieIds array
                    vm.MovieIds.push(movie.id);
                });

            //cusotom validator for customer
            $.validator.addMethod("validCustomer", function() {
                //here we check that our vm has property called CustomerId and which is not 0
                return vm.CustomerId && vm.CustomerId !== 0;
            }, "Please select a valid customer"); //also added an error message

            //cusotom validator for Movie
            $.validator.addMethod("validMovie",
                function() {
                    //here we check that at least one movie is selecte so we check the array length
                    return  vm.MovieIds.length > 0;
                },
                "Please select at least one movie");

            //for validation
            var validator = $("#newRental").validate({
                //to post the form
                submitHandler: function() {
                    //to prevent submit form normally as usual
                   // e.preventDefault(); not work here 
                    //instead of normal psot we will use ajax
                    $.ajax({
                            url: "/api/newRental",
                            method: "post",
                            data: vm
                        })
                        .done(function() {
                            toastr.success("Rental successflly recorded");

                            //to clear the input field after success
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty("val", "");
                            //also need to reset view model by resetn g movieIds to empty array
                            vm = { MovieIds: [] }
                            //also reset form interms of validation
                            validator.resetForm();
                        })
                        .fail(function() {
                            toastr.error("Somehting unexpected happened"); 
                        });

                    //to prevent submit form normally
                    return false;
                }
            });

           
 
        });
    </script>

}

